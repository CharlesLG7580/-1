#include<iostream>
using namespace std;
#include"student.h"

Student::Student()
{

}

Student::Student(int id, string name, string pwd)
{
	this->m_Id = id;
	this->m_Name = name;
	this->m_Pwd = pwd;

	//初始化机房信息
	ifstream ifs;
	ifs.open(COMPUTER_FILE, ios::in);

	ComputerRoom com;
	while (ifs >> com.m_ComId && ifs >> com.m_MaxNum)
	{
		vCom.push_back(com);
	}
	ifs.close();
}

void Student::operMenu()
{
	cout << "欢迎学生代表" << this->m_Name << "登录" << endl;
	cout << "\t\t --------------------------\n";
	cout << "\t\t|                           |\n";
	cout << "\t\t|          1.申请预约       |\n";
	cout << "\t\t|                           |\n";
	cout << "\t\t|          2.查看我的预约   |\n";
	cout << "\t\t|                           |\n";
	cout << "\t\t|          3.查看所有预约   |\n";
	cout << "\t\t|                           |\n";
	cout << "\t\t|          4.取消预约       |\n";
	cout << "\t\t|                           |\n";
	cout << "\t\t|          0.注销登录       |\n";
	cout << "\t\t|                           |\n";
	cout << "\t\t --------------------------\n";

	cout << "请输入您的选择：  ";
}

//预约
void Student::applyOrder()
{


	int date = 0;
	int interval = 0;
	int room = 0;


	cout << "机房开放的时间为周一到周五" << endl;//////////////
	cout << "请输入申请预约的时间：" << endl;
	cout << "1.周一" << endl;
	cout << "2.周二" << endl;
	cout << "3.周三" << endl;
	cout << "4.周四" << endl;
	cout << "5.周五" << endl;

	

	while (true)
	{
		cin >> date;
		if (date >= 1 && date <= 5)
		{
			break;
		}
		cout << "输入有误，请重新输入" << endl;

	}
	cout << "请输入申请预约的时间段" << endl;/////////////////////////
	cout << "1.上午" << endl;
	cout << "2.下午" << endl;
	while (true)
	{
		cin >> interval;
		if (interval >= 1 && interval <= 2)
		{
			break;
		}
		cout << "输入有误，请重新输入" << endl;
	}

	cout << "请选择机房" << endl;/////////////////////////////
	for (int i = 0; i < vCom.size(); i++)
	{
		cout << vCom[i].m_ComId << "号机房容量为：" << vCom[i].m_MaxNum << endl;
	}
	while (true)
	{
		cin >> room;
		if (room >= 1 && room <= 3)
		{
			break;
		}
		cout << "输入有误，请重新输入" << endl;
	}
	cout << "预约成功，审核中" << endl;

	ofstream ofs;				//可以看出这里的内容都是以键值对的形式存在的
	ofs.open(ORDER_FILE, ios::app);			//所以我们可以利用一个map来存储
	ofs << "date:" << date << " ";
	ofs << "interval:" << interval << " ";
	ofs << "stuId:" << this->m_Id << " ";
	ofs << "stuName:" << this->m_Name << " ";
	ofs << "roomId:" << room << " ";
	ofs << "status:" << 1 << " ";
	ofs << endl;

	ofs.close();
	system("pause");
	system("cls");

}

void Student::showMyOrder()
{
	OrderFile of;
	if (of.m_Size == 0)
	{
		cout << "无预约记录" << endl;
		system("pause");
		system("cls");
		return;
	}
	cout << of.m_Size;
	for (int i = 0; i < of.m_Size; i++)
	{
		//string转int
		//string利用c_str()转为const char*先转换为c风格字符串）
		//利用atoi(const char*）转int
		if (this->m_Id == atoi(of.m_orderData[i]["stuId"].c_str()))
		{
			cout << "预约日期: 周" << of.m_orderData[i]["date"];
			cout << "时间段: " << (of.m_orderData[i]["interval"] == "1" ? "上午" : "下午");//三目运算符赋值
			cout << "机房号: " << of.m_orderData[i]["roomId"];
			string status = "状态";
			if (of.m_orderData[i]["status"] == "1")
			{
				status += "审核中";
			}
			else if (of.m_orderData[i]["status"] == "2")
			{
				status += "预约成功";
			
			}
			else if (of.m_orderData[i]["status"] == "-1")
			{
				status += "预约失败，审核未通过";

			}
			else 
			{
				status += "预约已取消";

			}
			cout << status << endl;
			
		}
	}
	system("pause");
	system("cls");

}


void Student::showAllOrder()
{
	OrderFile of;
	if (of.m_Size == 0)
	{
		cout << "无预约记录" << endl;
		system("pause");
		system("cls");
		return;
	}
	for (int i = 0; i < of.m_Size; i++)
	{
		//string转int
		//string利用c_str()转为const char*先转换为c风格字符串）
		//利用atoi(const char*）转int
		cout << i + 1 << ". ";
			cout << "预约日期: 周" << of.m_orderData[i]["date"];
			cout << "时间段: " << (of.m_orderData[i]["interval"] == "1" ? "上午" : "下午");//三目运算符赋值
			cout << "机房号: " << of.m_orderData[i]["roomId"];
			cout<<"学号 "<<of.m_orderData[i]["stuId"];
			cout << "学生姓名：" << of.m_orderData[i]["stuName"];
			string status = " 状态";
			if (of.m_orderData[i]["status"] == "1")
			{
				status += "审核中";
			}
			else if (of.m_orderData[i]["status"] == "2")
			{
				status += "预约成功";

			}
			else if (of.m_orderData[i]["status"] == "-1")
			{
				status += "预约失败，审核未通过";

			}
			else
			{
				status += "预约已取消";

			}
			cout << status << endl;

	
	}
	system("pause");
	system("cls");

}
void Student::cancelOrder()
{
	OrderFile of;
	if (of.m_Size == 0)
	{
		cout << "无预约记录" << endl;
		system("pause");
		system("cls");
		return;
	}
	cout << "审核中预约成功的记录可以取消，" << endl;

	vector<int>v;
	int index = 1;
	for (int i = 0; i < of.m_Size; i++)
	{
		if (this->m_Id == atoi(of.m_orderData[i]["stuId"].c_str()))
		{
			v.push_back(i);
			cout << index++ << ". ";
			cout << "预约日期: 周" << of.m_orderData[i]["date"];
			cout << "时间段: " << (of.m_orderData[i]["interval"] == "1" ? "上午" : "下午");//三目运算符赋值
			cout << "机房号: " << of.m_orderData[i]["roomId"];
			cout << "学号 " << of.m_orderData[i]["stuId"];
			cout << "学生姓名：" << of.m_orderData[i]["stuName"];
			string status = " 状态";
			if (of.m_orderData[i]["status"] == "1")
			{
				status += "审核中";
			}
			else if (of.m_orderData[i]["status"] == "2")
			{
				status += "预约成功";

			}
			else if (of.m_orderData[i]["status"] == "-1")
			{
				status += "预约失败，审核未通过";

			}
			else
			{
				status += "预约已取消";

			}
		}
	}
	cout << "请输入取消的记录，0代表返回" << endl;
	int select = 0;
	while (true)
	{
		cin >> select;
		if (select >= 0 && select <= v.size())
		{
			if (select == 0)
			{
				break;
			}
			else
			{
				of.m_orderData[v[select - 1]]["status"] == "0";
				//of.updateOrder();
				cout << "已取消预约" << endl;
				break;
			}
		}
		cout << "输入有误，请重新输入" << endl;
	}
	system("pause");
	system("cls");

}